{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAIMC,EAAOC,SAASC,cAAc,SAC9BC,EAASH,EAAKI,iBAAiB,SAC/BC,EAAUL,EAAKE,cAAc,UASnC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAXgB,IAAIC,SAAQ,SAACC,EAAKC,GAChCC,YAAW,WACLN,EAEFI,EAAI,CAAEN,WAAUC,UAGhBM,EAAI,CAAEP,WAAUC,S,GAEjBA,E,IAjBPR,EAAKgB,UAAUC,IAAI,SACnBd,EAAOe,SAAQ,SAAAC,G,OAAQA,EAAKH,UAAUC,IAAI,iB,IAC1CZ,EAAQW,UAAUC,IAAI,qBAwDtBjB,EAAKoB,iBAAiB,UARH,SAACC,GAChBA,EAAEC,iBACF,IAjBiBC,EAAGf,EAAOgB,EAAMC,EAiB3BC,GAjBWH,EAiBSF,EAAEM,cAAcC,SAjBtBpB,EAAKe,EAALf,MAAOgB,EAAID,EAAJC,KAAMC,EAAMF,EAANE,OAC3B,CACJI,aAAcC,OAAOtB,EAAMuB,OAC3BN,OAAQK,OAAOL,EAAOM,OACtBP,KAAMM,OAAON,EAAKO,UAIN,SAAAR,G,IAAGM,EAAYN,EAAZM,aAAcJ,EAAMF,EAANE,OAAQD,EAAID,EAAJC,KACzC,OAAIK,EAAe,EAAUG,EAAAlC,GAASmC,OAAOC,QAAQ,sDACjDV,EAAO,EAAUQ,EAAAlC,GAASmC,OAAOC,QAAQ,uDACzCT,GAAU,IAAUO,EAAAlC,GAASmC,OAAOC,QAAQ,oC,EAOzCC,CAAUT,MA/BI,SAAAU,GACrB,I,IADwBP,EAAYO,EAAZP,aAAcJ,EAAMW,EAANX,OAAQD,EAAIY,EAAJZ,KACrCa,EAAI,EAAGA,GAAKZ,EAAQY,GAAK,EAC9B/B,EAAc+B,EAAGR,GACfS,MAAK,SAAAf,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MACfwB,EAAAlC,GAASmC,OAAOM,QAAQ,qBAAoCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAErEiC,OAAM,SAAAlB,G,IAAGhB,EAAQgB,EAARhB,SAAUC,EAAKe,EAALf,MAChBwB,EAAAlC,GAASmC,OAAOC,QAAQ,oBAAmCM,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAEtEqB,GAAgBL,C,CAuBlBkB,CAAehB,GACfL,EAAEM,cAAcgB,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/src/notiflix.css\";\n\n\nconst form = document.querySelector(\".form\");\nconst fields = form.querySelectorAll(\"label\");\nconst btnForm = form.querySelector(\"button\");\n\n// styles\nform.classList.add(\"timer\");\nfields.forEach(elem => elem.classList.add(\"field-promises\"));\nbtnForm.classList.add(\"btn-form-promises\");\n\n// Functions\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        res({ position, delay });\n      } else {\n        // Reject\n        rej({ position, delay });\n      }\n    }, delay)\n  });\n  return promise;\n}\n\nconst createPromises = ({ currentDelay, amount, step }) => {\n  for (let i = 1; i <= amount; i += 1){\n      createPromise(i, currentDelay)\n       .then(({ position, delay }) => {\n           Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        })\n       .catch(({ position, delay }) => {\n           Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n      currentDelay += step;\n    }\n}\n\nconst toNumberArgs = ({ delay, step, amount}) => {\n   return {\n      currentDelay: Number(delay.value),\n      amount: Number(amount.value),\n      step: Number(step.value)\n    }\n}\n\nconst checkArgs = ({ currentDelay, amount, step }) => {\n  if (currentDelay < 0) return Notiflix.Notify.failure(\"The First delay must be greater than or equal to 0\");\n  if (step < 0) return Notiflix.Notify.failure(\"The Delay step must be greater than or equal to 0\");\n  if (amount <= 0) return Notiflix.Notify.failure(\"The Amount must be greater than 0\");\n  return true;\n}\n\nconst submitForm = (e) => {\n    e.preventDefault();\n    const args = toNumberArgs(e.currentTarget.elements);\n    if (!checkArgs(args)) return;\n    createPromises(args);\n    e.currentTarget.reset();\n}\n\nform.addEventListener(\"submit\", submitForm);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$fields","querySelectorAll","$ce04d3a99e08e73b$var$btnForm","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","classList","add","forEach","elem","addEventListener","e","preventDefault","param","step","amount","args","currentTarget","elements","currentDelay","Number","value","$parcel$interopDefault","Notify","failure","$ce04d3a99e08e73b$var$checkArgs","param1","i","then","success","concat","catch","$ce04d3a99e08e73b$var$createPromises","reset"],"version":3,"file":"03-promises.754aec3c.js.map"}