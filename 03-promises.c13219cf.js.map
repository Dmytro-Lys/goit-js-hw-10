{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAASH,EAAKI,iBAAiB,SAC/BC,EAAUL,EAAKE,cAAc,UASnC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAYtC,OAXgB,IAAIC,SAAQ,CAACC,EAAKC,KAChCC,YAAW,KACLN,EAEFI,EAAI,C,SAAEN,E,MAAUC,IAGhBM,EAAI,C,SAAEP,E,MAAUC,GAAQ,GAEzBA,EAAM,G,CAjBbR,EAAKgB,UAAUC,IAAI,SACnBd,EAAOe,SAAQC,GAAQA,EAAKH,UAAUC,IAAI,oBAC1CZ,EAAQW,UAAUC,IAAI,qBAwDtBjB,EAAKoB,iBAAiB,UARFC,IAChBA,EAAEC,iBACF,MAAMC,EAjBW,GAACf,MAAEA,EAAKgB,KAAEA,EAAIC,OAAEA,MAC3B,CACJC,aAAcC,OAAOnB,EAAMoB,OAC3BH,OAAQE,OAAOF,EAAOG,OACtBJ,KAAMG,OAAOH,EAAKI,SAaPC,CAAaR,EAAES,cAAcC,UAT5B,GAACL,aAAEA,EAAYD,OAAEA,EAAMD,KAAEA,KACrCE,EAAe,EAAUM,EAAAlC,GAASmC,OAAOC,QAAQ,sDACjDV,EAAO,EAAUQ,EAAAlC,GAASmC,OAAOC,QAAQ,uDACzCT,GAAU,IAAUO,EAAAlC,GAASmC,OAAOC,QAAQ,qCAOzCC,CAAUZ,KA/BI,GAACG,aAAEA,EAAYD,OAAEA,EAAMD,KAAEA,MAC9C,IAAK,IAAIY,EAAI,EAAGA,GAAKX,EAAQW,GAAK,EAC9B9B,EAAc8B,EAAGV,GACfW,MAAK,EAAC9B,SAAEA,EAAQC,MAAEA,MACfwB,EAAAlC,GAASmC,OAAOK,QAAQ,qBAAqB/B,QAAeC,MAAU,IAEzE+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAChBwB,EAAAlC,GAASmC,OAAOC,QAAQ,oBAAoB3B,QAAeC,MAAU,IAE1EkB,GAAgBF,C,EAuBlBgB,CAAejB,GACfF,EAAES,cAAcW,QAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport \"notiflix/src/notiflix.css\";\n\n\nconst form = document.querySelector(\".form\");\nconst fields = form.querySelectorAll(\"label\");\nconst btnForm = form.querySelector(\"button\");\n\n// styles\nform.classList.add(\"timer\");\nfields.forEach(elem => elem.classList.add(\"field-promises\"));\nbtnForm.classList.add(\"btn-form-promises\");\n\n// Functions\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((res, rej) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        res({ position, delay });\n      } else {\n        // Reject\n        rej({ position, delay });\n      }\n    }, delay)\n  });\n  return promise;\n}\n\nconst createPromises = ({ currentDelay, amount, step }) => {\n  for (let i = 1; i <= amount; i += 1){\n      createPromise(i, currentDelay)\n       .then(({ position, delay }) => {\n           Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        })\n       .catch(({ position, delay }) => {\n           Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n      currentDelay += step;\n    }\n}\n\nconst toNumberArgs = ({ delay, step, amount}) => {\n   return {\n      currentDelay: Number(delay.value),\n      amount: Number(amount.value),\n      step: Number(step.value)\n    }\n}\n\nconst checkArgs = ({ currentDelay, amount, step }) => {\n  if (currentDelay < 0) return Notiflix.Notify.failure(\"The First delay must be greater than or equal to 0\");\n  if (step < 0) return Notiflix.Notify.failure(\"The Delay step must be greater than or equal to 0\");\n  if (amount <= 0) return Notiflix.Notify.failure(\"The Amount must be greater than 0\");\n  return true;\n}\n\nconst submitForm = (e) => {\n    e.preventDefault();\n    const args = toNumberArgs(e.currentTarget.elements);\n    if (!checkArgs(args)) return;\n    createPromises(args);\n    e.currentTarget.reset();\n}\n\nform.addEventListener(\"submit\", submitForm);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$fields","querySelectorAll","$47d4ff9957288465$var$btnForm","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","res","rej","setTimeout","classList","add","forEach","elem","addEventListener","e","preventDefault","args","step","amount","currentDelay","Number","value","$47d4ff9957288465$var$toNumberArgs","currentTarget","elements","$parcel$interopDefault","Notify","failure","$47d4ff9957288465$var$checkArgs","i","then","success","catch","$47d4ff9957288465$var$createPromises","reset"],"version":3,"file":"03-promises.c13219cf.js.map"}